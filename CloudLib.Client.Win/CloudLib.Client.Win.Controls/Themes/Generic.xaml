<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:CloudLib.Client.Win.Controls"
	xmlns:winui="using:Microsoft.UI.Xaml">

	<Style BasedOn="{StaticResource DefaultNavigationRibbonItemStyle}" TargetType="local:NavigationRibbonItem"/>

	<Style x:Key="DefaultNavigationRibbonItemStyle" TargetType="local:NavigationRibbonItem">
		<Setter Property="Background" Value="Magenta"/>
	</Style>

	<Style BasedOn="{StaticResource DefaultNavigationRibbonStyle}" TargetType="local:NavigationRibbon"/>

	<Style x:Key="DefaultNavigationRibbonStyle" TargetType="local:NavigationRibbon">
		<Setter Property="MenuItemTemplateSelector" Value="{StaticResource NavigationRibbonItemTemplateSelector}"/>
		<Setter Property="PaneDisplayMode" Value="Top"/>
		<Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}"/>
		<Setter Property="Background" Value="{ThemeResource SystemControlAcrylicWindowBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:NavigationRibbon">
					<Grid x:Name="RootGrid">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>

						<!--VisualStateGroups for AutoSuggestBox and BackButton-->
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="AutoSuggestGroup">
								<VisualState x:Name="AutoSuggestBoxVisible"/>
								<VisualState x:Name="AutoSuggestBoxCollapsed">
									<VisualState.Setters>
										<Setter Target="TopPaneAutoSuggestArea.Visibility" Value="Collapsed"/>
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="BackButtonGroup">
								<VisualState x:Name="BackButtonVisible" />
								<VisualState x:Name="BackButtonCollapsed">
									<VisualState.Setters>
										<Setter Target="TopNav_BackButtonPlaceholder.Width" Value="0"/>
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!--Button Grid-->
						<Grid x:Name="PaneToggleButtonGrid"
							  HorizontalAlignment="Left"
							  VerticalAlignment="Top"
							  Canvas.ZIndex="100">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<Grid x:Name="TogglePaneTopPadding"
								  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

							<Grid x:Name="ButtonHolderGrid"
								  Grid.Row="1"
								  Margin="{ThemeResource PivotNavButtonMargin}">
								<Button x:Name="NavigationViewBackButton"
										Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
										VerticalAlignment="Top"
										IsEnabled="{TemplateBinding IsBackEnabled}"
										Style="{StaticResource NavigationBackButtonNormalStyle}"
										Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}">
									<ToolTipService.ToolTip>
										<ToolTip x:Name="NavigationViewBackButtonToolTip" />
									</ToolTipService.ToolTip>
								</Button>
								<Button x:Name="NavigationViewCloseButton"
										VerticalAlignment="Top"
										Style="{StaticResource NavigationBackButtonNormalStyle}">
									<ToolTipService.ToolTip>
										<ToolTip x:Name="NavigationViewCloseButtonToolTip" />
									</ToolTipService.ToolTip>
								</Button>
								<Button x:Name="TogglePaneButton"
										MinWidth="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path = TemplateSettings.SmallerPaneToggleButtonWidth}"
										HorizontalAlignment="Center"
										VerticalAlignment="Top"
										AutomationProperties.LandmarkType="Navigation"
										FocusVisualMargin="0"
										Style="{TemplateBinding PaneToggleButtonStyle}"
										Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}">
									<TextBlock x:Name="PaneTitleTextBlock"
											   Grid.Column="0"
											   Margin="0,-2,0,0"
											   HorizontalAlignment="Left"
											   VerticalAlignment="Center"
											   Style="{StaticResource ResourceKey=SubheaderTextBlockStyle}"
											   Text="{TemplateBinding PaneTitle}" />
								</Button>

								<Grid x:Name="PaneTitleHolder"
									  Height="40"
									  Visibility="Collapsed">
									<ContentControl x:Name="PaneTitlePresenter"
													Margin="{ThemeResource ContentDialogTitleMargin}"
													HorizontalContentAlignment="Stretch"
													VerticalContentAlignment="Stretch"
													IsTabStop="False" />
								</Grid>
							</Grid>
						</Grid>

						<StackPanel x:Name="TopNavArea"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Top"
											Background="{ThemeResource NavigationViewExpandedPaneBackground}"
											Canvas.ZIndex="1"
											XYFocusKeyboardNavigation="Enabled">
							<Grid x:Name="TopNavTopPadding" Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										  Visibility="{Binding TemplateSettings.TopPaneVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							<Grid x:Name="TopNavGrid"
										  Height="{ThemeResource NavigationViewTopPaneHeight}"
										  Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
										  BorderBrush="{ThemeResource MenuFlyoutSeparatorThemeBrush}"
										  Visibility="{Binding TemplateSettings.TopPaneVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav"
										Width="{ThemeResource AppBarExpandButtonThemeWidthGridLength}"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*" MinWidth="48"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid x:Name="TopNavLeftPadding"
											  Grid.Column="1"
											  Width="0"/>
								<ContentControl x:Name="PaneHeaderOnTopPane"
														Grid.Column="2"
														HorizontalContentAlignment="Stretch"
														VerticalContentAlignment="Stretch"
														IsTabStop="False"/>
								<ContentControl x:Name="PaneTitleOnTopPane"
														Grid.Column="2"
														Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}"
														HorizontalContentAlignment="Stretch"
														VerticalContentAlignment="Stretch"
														IsTabStop="False"/>

								<!--Top nav ItemsRepeater-->
								<ItemsRepeaterScrollHost Grid.Column="3">
									<ScrollViewer HorizontalScrollBarVisibility="Hidden"
												  HorizontalScrollMode="Disabled"
												  VerticalScrollBarVisibility="Hidden"
												  VerticalScrollMode="Disabled">
										<ItemsRepeater x:Name="TopNavMenuItemsHost"
													   AutomationProperties.AccessibilityView="Content"
													   AutomationProperties.LandmarkType="Navigation"
													   AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}">
											<ItemsRepeater.Layout>
												<StackLayout Orientation="Horizontal"/>
											</ItemsRepeater.Layout>
										</ItemsRepeater>
									</ScrollViewer>
								</ItemsRepeaterScrollHost>

								<Button x:Name="TopNavOverflowButton"
										Grid.Column="4"
										Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
										Content="More"
										Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
										Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">
									<Button.Flyout>
										<Flyout ElementSoundMode="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ElementSoundMode}"
												Placement="BottomEdgeAlignedRight">
											<Flyout.FlyoutPresenterStyle>
												<Style TargetType="FlyoutPresenter">
													<Setter Property="Padding" Value="{ThemeResource NavigationViewAutoSuggestBoxMargin}"/>
													<Setter Property="Margin" Value="0,-4,0,0"/>
													<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
													<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
													<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
													<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
													<Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
													<Setter Property="CornerRadius" Value="{ThemeResource HyperlinkFocusRectCornerRadius}"/>
													<!--TODO: Create a OverlayCornerRadius ThemeResource to replace this-->
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="FlyoutPresenter">
																<ScrollViewer x:Name="ScrollViewer"
																			  AutomationProperties.AccessibilityView="Raw"
																			  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
																			  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
																			  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
																			  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
																			  ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
																	<ContentPresenter x:Name="ContentPresenter"
																					  Padding="{TemplateBinding Padding}"
																					  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																					  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																					  Background="{TemplateBinding Background}"
																					  BorderBrush="{TemplateBinding BorderBrush}"
																					  BorderThickness="{TemplateBinding BorderThickness}"
																					  Content="{TemplateBinding Content}"
																					  ContentTemplate="{TemplateBinding ContentTemplate}"
																					  ContentTransitions="{TemplateBinding ContentTransitions}"
																					  CornerRadius="{TemplateBinding CornerRadius}" />
																</ScrollViewer>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Flyout.FlyoutPresenterStyle>
											<ItemsRepeaterScrollHost>
												<ScrollViewer VerticalScrollBarVisibility="Auto">
													<ItemsRepeater x:Name="TopNavMenuItemsOverflowHost"
																   AutomationProperties.AccessibilityView="Content">
														<ItemsRepeater.Layout>
															<StackLayout/>
														</ItemsRepeater.Layout>
													</ItemsRepeater>
												</ScrollViewer>
											</ItemsRepeaterScrollHost>
										</Flyout>
									</Button.Flyout>
								</Button>
								<ContentControl x:Name="PaneCustomContentOnTopPane"
												Grid.Column="5"
												HorizontalContentAlignment="Stretch"
												VerticalContentAlignment="Stretch"
												IsTabStop="False" />

								<Grid x:Name="TopPaneAutoSuggestArea"
									  Grid.Column="6"
									  Height="{ThemeResource NavigationViewTopPaneHeight}">

									<ContentControl x:Name="TopPaneAutoSuggestBoxPresenter"
													MinWidth="216"
													Margin="{ThemeResource TopNavigationViewAutoSuggestBoxMargin}"
													HorizontalContentAlignment="Stretch"
													VerticalContentAlignment="Center"
													IsTabStop="False" />
								</Grid>

								<ContentControl x:Name="PaneFooterOnTopPane"
												Grid.Column="7"
												HorizontalContentAlignment="Stretch"
												VerticalContentAlignment="Stretch"
												IsTabStop="False" />
								<!--  Top footer menu ItemsRepeater  -->
								<ItemsRepeater x:Name="TopFooterMenuItemsHost"
													Grid.Column="8"
													AutomationProperties.AccessibilityView="Content"
													AutomationProperties.LandmarkType="Navigation">
									<ItemsRepeater.Layout>
										<StackLayout Orientation="Horizontal" />
									</ItemsRepeater.Layout>
								</ItemsRepeater>

							</Grid>
							<Border x:Name="TopNavContentOverlayAreaGrid"
									Child="{TemplateBinding ContentOverlay}" />
						</StackPanel>

						<Border x:Name="PART_NavigationRibbonContentBorder"
								Grid.Row="1"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								Background="{Binding ElementName=PART_NavigationRibbonContent, Path=Content.Background}">
							<ContentControl x:Name="PART_NavigationRibbonContent"
											HorizontalContentAlignment="Stretch"
											Content="{TemplateBinding SelectedItem}">
								<ContentControl.Resources>
									<Storyboard x:Name="PART_TabChangedStoryboard">
										<PopInThemeAnimation TargetName="PART_NavigationRibbonContent" />
									</Storyboard>

									<!--
										FIXME: Ideally, these resources would be set by the NavigationRibbonItem,
										but there isn't a way to do that without duplicating the CommandBar template.
									-->
									<Style BasedOn="{StaticResource NavigationRibbonElementContainerStyle}"
										   TargetType="AppBarElementContainer" />
									<Style BasedOn="{StaticResource AppBarSplitButtonStyle}"
										   TargetType="SplitButton" />
								</ContentControl.Resources>
							</ContentControl>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<SolidColorBrush x:Key="NavigationRibbonAcrylicBackground"
					 Color="{ThemeResource SystemControlChromeMediumLowAcrylicWindowMediumBrush}" />
	<Style x:Key="NavigationRibbonAcrylicStyle"
		   BasedOn="{StaticResource DefaultNavigationRibbonStyle}"
		   TargetType="local:NavigationRibbon">
		<Setter Property="Background" Value="{ThemeResource NavigationRibbonAcrylicBackground}" />
	</Style>
</ResourceDictionary>
